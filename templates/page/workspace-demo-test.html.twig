{% extends 'base.html.twig' %}

{% block title %}Editor Test - Summernote{% endblock %}

{% block body %}
  <main class="vh-100 vw-100 pt-3 pb-3 editorsite">
    <section class="container-fluid h-100">
      
      {# Info-Banner #}
      <div class="row mb-3">
        <div class="col-12">
          <div class="alert alert-info" role="alert">
            <h5><i class="fas fa-flask"></i> Test-Version mit Summernote Editor</h5>
            <p class="mb-0">Das ist eine Test-Version des neuen Editors. Der <a href="{{ path('workspace_demo') }}" class="alert-link">alte Editor</a> funktioniert weiterhin normal.</p>
          </div>
        </div>
      </div>

      <div class="row h-100">
        <!-- Editor links -->
        <div class="col-12 col-md-8 d-flex flex-column editor-side">
          <div class="flex-grow-1 d-flex flex-column">
            
            {# Vereinfachte Toolbar - Summernote hat eigene #}
            <div class="mb-3">
              <div class="btn-group" role="group">
                <button type="button" class="btn btn-outline-primary btn-sm" onclick="insertSampleText()">
                  <i class="fas fa-plus"></i> Beispieltext
                </button>
                <button type="button" class="btn btn-outline-success btn-sm" onclick="saveContent()">
                  <i class="fas fa-save"></i> Speichern
                </button>
                <button type="button" class="btn btn-outline-info btn-sm" onclick="showHTML()">
                  <i class="fas fa-code"></i> HTML anzeigen
                </button>
              </div>
            </div>

            {# Summernote Editor #}
            <div id="summernote-editor" class="h-100">{{ content|raw }}</div>
          </div>
        </div>
  
        <!-- Chat rechts -->
        <div class="col-12 col-md-4 d-flex flex-column note-side">
          <div class="info-box flex-fill bg-white mb-2">
            <h6><i class="fas fa-sticky-note"></i> Notizen</h6>
            <div class="p-2">
              <p class="small text-muted">Hier könnten Notizen stehen...</p>
              <ul class="small">
                <li>Idee 1: Mehr Farben</li>
                <li>Idee 2: Tabellen testen</li>
                <li>Idee 3: Bilder einfügen</li>
              </ul>
            </div>
          </div>
          
          <div class="llm-chat bg-white text-dark mt-2" id="llm-chat-box">
            <div class="p-3">
              <h6><i class="fas fa-robot"></i> LLM Chat</h6>
              <div class="mt-3">
                <h6>Antwort:</h6>
                <div id="llm-response" class="border p-2 rounded" style="min-height: 80px;">
                  Noch nichts gefragt.
                </div>
              </div>
              <form id="llm-form">
                <textarea class="form-control mb-2" id="llm-input" rows="3" placeholder="Frage an das LLM..."></textarea>
                <button type="submit" class="btn btn-primary w-100">
                  <i class="fas fa-paper-plane"></i> Absenden
                </button>
              </form>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>

  {# Debug-Bereich (nur für Test) #}
  <div class="container-fluid mt-3">
    <div class="row">
      <div class="col-12">
        <div class="card">
          <div class="card-header">
            <h6><i class="fas fa-bug"></i> Debug-Info (nur für Test)</h6>
          </div>
          <div class="card-body">
            <div id="debug-output" class="small bg-light p-2 rounded">
              Debug-Ausgabe erscheint hier...
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  {# Summernote CSS #}
  <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.20/dist/summernote-bs5.min.css" rel="stylesheet">
  
  {# jQuery für Summernote #}
  <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
  
  {# Summernote JS #}
  <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.20/dist/summernote-bs5.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.20/dist/lang/summernote-de-DE.min.js"></script>

  <script>
  $(document).ready(function() {
      // Summernote mit deutscher Sprache initialisieren
      $('#summernote-editor').summernote({
          height: 500,
          lang: 'de-DE',
          toolbar: [
              ['style', ['style']],
              ['font', ['bold', 'italic', 'underline', 'strikethrough', 'superscript', 'subscript', 'clear']],
              ['fontname', ['fontname']],
              ['fontsize', ['fontsize']],
              ['color', ['color']],
              ['para', ['ul', 'ol', 'paragraph']],
              ['height', ['height']],
              ['table', ['table']],
              ['insert', ['link', 'picture', 'hr']],
              ['view', ['fullscreen', 'codeview', 'help']]
          ],
          styleTags: ['p', 'blockquote', 'pre', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'],
    fontSizes: ['8', '9', '10', '11', '12', '14', '16', '18', '24', '36', '48'],
    colors: [
        ['#000000', '#424242', '#636363', '#9C9C94', '#CEC6CE', '#EFEFEF', '#F7F3F7', '#FFFFFF'],
        ['#FF0000', '#FF9C00', '#FFFF00', '#00FF00', '#00FFFF', '#0000FF', '#9C00FF', '#FF00FF']
    ],
          callbacks: {
              onChange: function(contents, $editable) {
                  // Debug-Info aktualisieren
                  updateDebugInfo('Content Changed', contents.length + ' Zeichen');
              },
              onFocus: function() {
                  updateDebugInfo('Editor Focus', 'Editor wurde fokussiert');
              },
              onBlur: function() {
                  updateDebugInfo('Editor Blur', 'Editor hat Fokus verloren');
              }
          }
      });

      // LLM-Form Handler
      $('#llm-form').on('submit', function(e) {
          e.preventDefault();
          
          const prompt = $('#llm-input').val();
          if (!prompt.trim()) return;
          
          $('#llm-response').html('<i class="fas fa-spinner fa-spin"></i> Denke nach...');
          
          // LLM-API aufrufen
          fetch('/api/llm/chat', {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                  prompt: prompt
              })
          })
          .then(response => response.json())
          .then(data => {
              if (data.response) {
                  $('#llm-response').html(data.response);
                  updateDebugInfo('LLM Response', 'Antwort erhalten: ' + data.response.length + ' Zeichen');
              } else {
                  $('#llm-response').html('Fehler: ' + (data.error || 'Unbekannter Fehler'));
              }
          })
          .catch(error => {
              $('#llm-response').html('Fehler: ' + error.message);
              updateDebugInfo('LLM Error', error.message);
          });
      });
  });

  // Test-Funktionen
  function insertSampleText() {
      const sampleText = '<h2>Eingefügter Text</h2><p>Das ist ein <strong>Beispieltext</strong> der automatisch eingefügt wurde. <em>Formatierung</em> funktioniert!</p>';
      $('#summernote-editor').summernote('pasteHTML', sampleText);
      updateDebugInfo('Sample Text', 'Beispieltext eingefügt');
  }

  function saveContent() {
      const content = $('#summernote-editor').summernote('code');
      updateDebugInfo('Save Simulation', 'Würde speichern: ' + content.length + ' Zeichen');
      
      // Hier würde normalerweise der Save-API-Aufruf stehen
      // fetch('/api/textdocument/1', { method: 'PUT', ... })
      
      alert('Speichern simuliert! (Siehe Debug-Info)');
  }

  function showHTML() {
      const content = $('#summernote-editor').summernote('code');
      updateDebugInfo('HTML Content', content);
  }

  function updateDebugInfo(action, info) {
      const timestamp = new Date().toLocaleTimeString();
      const debugOutput = document.getElementById('debug-output');
      debugOutput.innerHTML = `<strong>[${timestamp}] ${action}:</strong><br>${info}<br><br>` + debugOutput.innerHTML;
  }
  </script>

{% endblock %}