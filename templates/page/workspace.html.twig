{% extends 'base.html.twig' %}

{% block title %}{{ project.title }} - Workspace{% endblock %}

{% block body %}
  <main class="vh-100 vw-100 pt-3 pb-3 editorsite">
    <section class="container-fluid h-100">

      <div class="row h-100">
        <!-- Editor links -->
        <div class="col-12 col-md-8 d-flex flex-column editor-side">
          <div class="flex-grow-1 d-flex flex-column">
            
            {# Editor-Toolbar #}
            <div class="mb-3 d-flex justify-content-between">
              <div class="btn-group" role="group">
                <button type="button" class="btn btn-outline-success btn-sm" onclick="saveNow()">
                  <i class="fas fa-save"></i> Speichern
                </button>
                <button type="button" class="btn btn-outline-info btn-sm" onclick="showWordCount()">
                  <i class="fas fa-chart-bar"></i> Statistik
                </button>
                <button type="button" class="btn btn-outline-secondary btn-sm" onclick="toggleAutoSave()">
                  <i class="fas fa-robot"></i> <span id="autosave-status">Auto-Save: Ein</span>
                </button>
              </div>
              
              <div class="btn-group" role="group">
                <button type="button" class="btn btn-outline-warning btn-sm" onclick="saveAsNote()">
                  <i class="fas fa-sticky-note"></i> Als Notiz
                </button>
                <button type="button" class="btn btn-outline-primary btn-sm" data-bs-toggle="modal" data-bs-target="#notesModal">
                  <i class="fas fa-edit"></i> Notizen bearbeiten
                </button>
              </div>
              
              <div class="btn-group" role="group">
                <a href="{{ path('project_list') }}" class="btn btn-outline-secondary btn-sm">
                  <i class="fas fa-arrow-left"></i> Zur√ºck
                </a>
              </div>
            </div>

            {# Summernote Editor #}
            <div id="summernote-editor" class="h-100">
              {{ text_document ? text_document.content|raw : '<h1>Neues Dokument</h1><p>Beginne hier zu schreiben...</p>' }}
            </div>
          </div>
        </div>
  
        <!-- Sidebar rechts -->
        <div class="col-12 col-md-4 d-flex flex-column note-side">
          
          {# Projekt-Notizen #}
          <div class="info-box flex-fill bg-white mb-2">
            <h6><i class="fas fa-sticky-note"></i> Notizen zu diesem Projekt</h6>
            <div class="p-2">
              <div id="project-notes">
                <p class="small text-muted">Hier k√∂nnten deine Projekt-Notizen stehen...</p>
                <textarea class="form-control form-control-sm" rows="4" placeholder="Schnelle Notiz hinzuf√ºgen..."></textarea>
                <button class="btn btn-outline-primary btn-sm mt-2 w-100">
                  <i class="fas fa-plus"></i> Notiz speichern
                </button>
              </div>
            </div>
          </div>
          
          {# LLM Chat #}
          <div class="llm-chat bg-white text-dark mt-2" id="llm-chat-box">
            <div class="p-3">
              <h6><i class="fas fa-robot"></i> KI-Assistent</h6>
              <div class="mt-3">
                <h6>Antwort:</h6>
                <div id="llm-response" class="border p-2 rounded" style="min-height: 100px;">
                  Stelle eine Frage an den KI-Assistenten...
                </div>
              </div>
              <form id="llm-form" class="mt-3">
                <div class="input-group">
                  <textarea class="form-control" id="llm-input" rows="2" placeholder="Frage zur aktuellen Arbeit..."></textarea>
                  <button type="submit" class="btn btn-primary">
                    <i class="fas fa-paper-plane"></i>
                  </button>
                </div>
                <div class="form-check mt-2">
                  <input class="form-check-input" type="checkbox" id="insert-to-editor" checked>
                  <label class="form-check-label small" for="insert-to-editor">
                    Antwort in Editor einf√ºgen
                  </label>
                </div>
              </form>
            </div>
          </div>

          {# Status-Info #}
          <div class="bg-white mt-2 p-2 border rounded">
            <div class="small text-muted">
              <div id="save-status">
                <i class="fas fa-clock"></i> Letztes Speichern: Noch nicht gespeichert
              </div>
              <div id="word-count" class="mt-1">
                <i class="fas fa-file-alt"></i> W√∂rter: <span id="word-count-number">0</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>

    {# Notizen-Manager Modal #}
    <div class="modal fade" id="notesModal" tabindex="-1" aria-labelledby="notesModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-xl">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="notesModalLabel">
              <i class="fas fa-folder-open"></i> Notizen verwalten
            </h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div class="container-fluid h-100">
              
              {# Breadcrumb Navigation #}
              <nav aria-label="breadcrumb" class="mb-3">
                <ol class="breadcrumb mb-0" id="notes-breadcrumb">
                  <li class="breadcrumb-item">
                    <a href="#" onclick="navigateToFolder(null)">
                      <i class="fas fa-home"></i> Projekt Notizen
                    </a>
                  </li>
                </ol>
              </nav>
              
              {# Aktuelle Ordner/Notizen Ansicht #}
              <div class="row">
                <div class="col-12">
                  <div class="d-flex justify-content-between align-items-center mb-3">
                    <h6 class="mb-0" id="current-folder-title">üìÅ Projekt Notizen</h6>
                    <div class="btn-group btn-group-sm">
                      <button class="btn btn-outline-primary" onclick="createNewFolder()">
                        <i class="fas fa-folder-plus"></i> Ordner
                      </button>
                      <button class="btn btn-outline-success" onclick="createNewNote()">
                        <i class="fas fa-plus"></i> Notiz
                      </button>
                    </div>
                  </div>
                  
                  {# Ordner und Notizen Liste #}
                  <div id="notes-content" class="border rounded p-3" style="height: 300px; overflow-y: auto;">
                    <div class="row g-3" id="items-grid">
                      
                      {# Ordner #}
                      <div class="col-md-3 col-sm-4 col-6">
                        <div class="card h-100 folder-card" onclick="navigateToFolder(1)">
                          <div class="card-body text-center p-3">
                            <i class="fas fa-folder fa-2x text-warning mb-2"></i>
                            <h6 class="card-title small">Charaktere</h6>
                            <small class="text-muted">3 Notizen</small>
                          </div>
                        </div>
                      </div>
                      
                      <div class="col-md-3 col-sm-4 col-6">
                        <div class="card h-100 folder-card" onclick="navigateToFolder(2)">
                          <div class="card-body text-center p-3">
                            <i class="fas fa-folder fa-2x text-warning mb-2"></i>
                            <h6 class="card-title small">Recherche</h6>
                            <small class="text-muted">1 Notiz</small>
                          </div>
                        </div>
                      </div>
                      
                      {# Notizen #}
                      <div class="col-md-3 col-sm-4 col-6">
                        <div class="card h-100 note-card" onclick="openNote(1)">
                          <div class="card-body text-center p-3">
                            <i class="fas fa-sticky-note fa-2x text-info mb-2"></i>
                            <h6 class="card-title small">Schnelle Ideen</h6>
                            <small class="text-muted">27.05.2025</small>
                          </div>
                        </div>
                      </div>
                      
                      <div class="col-md-3 col-sm-4 col-6">
                        <div class="card h-100 note-card" onclick="openNote(2)">
                          <div class="card-body text-center p-3">
                            <i class="fas fa-sticky-note fa-2x text-success mb-2"></i>
                            <h6 class="card-title small">Plot Outline</h6>
                            <small class="text-muted">26.05.2025</small>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    {# Leerer Zustand #}
                    <div id="empty-folder" class="text-center text-muted py-5" style="display: none;">
                      <i class="fas fa-folder-open fa-3x mb-3"></i>
                      <p>Dieser Ordner ist leer.<br>Erstelle eine neue Notiz oder einen Unterordner.</p>
                    </div>
                  </div>
                </div>
              </div>

              {# Notiz-Editor (nur sichtbar wenn Notiz ge√∂ffnet) #}
              <div id="note-editor-section" style="display: none;">
                <hr class="my-4">
                <div class="d-flex justify-content-between align-items-center mb-3">
                  <div>
                    <h5 class="mb-1" id="current-note-title">Notiz Name</h5>
                    <small class="text-muted" id="current-note-path">üìÅ Projekt Notizen > Charaktere</small>
                  </div>
                  <div class="btn-group btn-group-sm">
                    <button class="btn btn-outline-success" onclick="saveCurrentNote()">
                      <i class="fas fa-save"></i> Speichern
                    </button>
                    <button class="btn btn-outline-secondary" onclick="closeNoteEditor()">
                      <i class="fas fa-times"></i> Schlie√üen
                    </button>
                    <button class="btn btn-outline-danger" onclick="deleteCurrentNote()">
                      <i class="fas fa-trash"></i> L√∂schen
                    </button>
                  </div>
                </div>
                
                <div class="mb-3">
                  <label for="note-title-input" class="form-label">Notiz-Titel:</label>
                  <input type="text" class="form-control" id="note-title-input" placeholder="Titel der Notiz">
                </div>
                
                <div class="mb-3">
                  <label for="note-content" class="form-label">Inhalt:</label>
                  <textarea id="note-content" class="form-control" rows="10" placeholder="Schreibe hier deine Notiz..."></textarea>
                </div>
              </div>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Schlie√üen</button>
          </div>
        </div>
      </div>
    </div>
  </main>

  {# Summernote CSS #}
  <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.20/dist/summernote-bs5.min.css" rel="stylesheet">
  
  {# jQuery f√ºr Summernote #}
  <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
  
  {# Summernote JS #}
  <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.20/dist/summernote-bs5.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.20/dist/lang/summernote-de-DE.min.js"></script>

  <style>
  .folder-card, .note-card {
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .folder-card:hover, .note-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.1);
  }
  
  .folder-card {
    border: 2px dashed #ffc107;
  }
  
  .note-card {
    border: 1px solid #dee2e6;
  }
  
  .breadcrumb-item a {
    text-decoration: none;
  }
  
  .breadcrumb-item a:hover {
    text-decoration: underline;
  }
  </style>

  <script>
  $(document).ready(function() {
      // Projekt-Daten aus PHP
      const projectId = {{ project.id }};
      const documentId = {{ text_document ? text_document.id : 'null' }};
      let autoSaveEnabled = true;
      let hasUnsavedChanges = false;

      // Summernote initialisieren
      $('#summernote-editor').summernote({
          height: 500,
          lang: 'de-DE',
          focus: true,
          toolbar: [
              ['style', ['style']],
              ['font', ['bold', 'italic', 'underline', 'strikethrough', 'clear']],
              ['fontname', ['fontname']],
              ['fontsize', ['fontsize']],
              ['color', ['color']],
              ['para', ['ul', 'ol', 'paragraph']],
              ['table', ['table']],
              ['insert', ['link', 'picture', 'hr']],
              ['view', ['fullscreen', 'codeview']]
          ],
          callbacks: {
              onChange: function(contents, $editable) {
                  hasUnsavedChanges = true;
                  updateWordCount(contents);
                  
                  // Auto-Save nach 3 Sekunden Inaktivit√§t
                  if (autoSaveEnabled) {
                      clearTimeout(window.autoSaveTimer);
                      window.autoSaveTimer = setTimeout(function() {
                          saveContent(false); // false = kein manueller Save
                      }, 3000);
                  }
              }
          }
      });

      // LLM-Form Handler
      $('#llm-form').on('submit', function(e) {
          e.preventDefault();
          
          const prompt = $('#llm-input').val().trim();
          if (!prompt) return;
          
          $('#llm-response').html('<i class="fas fa-spinner fa-spin"></i> Der KI-Assistent denkt nach...');
          
          // LLM-API aufrufen
          fetch('/api/llm/chat', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ prompt: prompt })
          })
          .then(response => response.json())
          .then(data => {
              if (data.response) {
                  $('#llm-response').html(data.response);
                  
                  // Optional: Antwort in Editor einf√ºgen
                  if ($('#insert-to-editor').is(':checked')) {
                      const formattedResponse = '<p><em>KI-Antwort:</em></p><blockquote>' + data.response + '</blockquote>';
                      $('#summernote-editor').summernote('pasteHTML', formattedResponse);
                  }
                  
                  $('#llm-input').val(''); // Input leeren
              } else {
                  $('#llm-response').html('<div class="text-danger">Fehler: ' + (data.error || 'Unbekannter Fehler') + '</div>');
              }
          })
          .catch(error => {
              $('#llm-response').html('<div class="text-danger">Verbindungsfehler: ' + error.message + '</div>');
          });
      });

      // Wort-Z√§hler aktualisieren
      function updateWordCount(content) {
          const text = $(content).text();
          const wordCount = text.trim() ? text.trim().split(/\s+/).length : 0;
          $('#word-count-number').text(wordCount);
      }

      // Initialer Wort-Count
      updateWordCount($('#summernote-editor').summernote('code'));
  });

  // Speicher-Funktionen
  function saveContent(isManual = true) {
      const content = $('#summernote-editor').summernote('code');
      const projectId = {{ project.id }};
      
      fetch('/api/textdocument/save', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
              project_id: projectId,
              content: content
          })
      })
      .then(response => response.json())
      .then(data => {
          if (data.status === 'success') {
              hasUnsavedChanges = false;
              const now = new Date().toLocaleTimeString();
              $('#save-status').html(`<i class="fas fa-check text-success"></i> Gespeichert um ${now}`);
              
              if (isManual) {
                  showTempMessage('Erfolgreich gespeichert!', 'success');
              }
          } else {
              $('#save-status').html(`<i class="fas fa-exclamation-triangle text-warning"></i> Fehler beim Speichern`);
              if (isManual) {
                  showTempMessage('Fehler beim Speichern!', 'danger');
              }
          }
      })
      .catch(error => {
          $('#save-status').html(`<i class="fas fa-times text-danger"></i> Speichern fehlgeschlagen`);
          if (isManual) {
              showTempMessage('Speichern fehlgeschlagen: ' + error.message, 'danger');
          }
      });
  }

  function saveNow() {
      saveContent(true);
  }

  function showWordCount() {
      const content = $('#summernote-editor').summernote('code');
      const text = $(content).text();
      const wordCount = text.trim() ? text.trim().split(/\s+/).length : 0;
      const charCount = text.length;
      
      showTempMessage(`W√∂rter: ${wordCount} | Zeichen: ${charCount}`, 'info');
  }

  function toggleAutoSave() {
      autoSaveEnabled = !autoSaveEnabled;
      const status = autoSaveEnabled ? 'Ein' : 'Aus';
      
      $('#autosave-status').html(`Auto-Save: ${status}`);
      showTempMessage(`Auto-Save ist jetzt ${status.toLowerCase()}`, 'info');
  }

  function showTempMessage(message, type) {
      const alertClass = `alert-${type}`;
      const alertHtml = `<div class="alert ${alertClass} alert-dismissible fade show position-fixed" style="top: 20px; right: 20px; z-index: 9999;">
          ${message}
          <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
      </div>`;
      
      $('body').append(alertHtml);
      
      setTimeout(function() {
          $('.alert').fadeOut();
      }, 3000);
  }

  // Notizen-Manager Funktionen
  let currentFolder = null;

  function saveAsNote() {
      const content = $('#summernote-editor').summernote('code');
      const title = prompt('Notiz-Titel:', 'Neue Notiz ' + new Date().toLocaleDateString());
      
      if (title) {
          showTempMessage('Notiz "' + title + '" gespeichert!', 'success');
      }
  }

  function navigateToFolder(folderId) {
      if (folderId === 1) {
          // "Charaktere" Ordner
          $('#current-folder-title').text('üìÅ Charaktere');
          updateBreadcrumb("Charaktere");
          loadFolderContent([
              {type: 'note', id: 3, title: 'Hauptcharakter', date: '25.05'},  
              {type: 'note', id: 4, title: 'Nebenfiguren', date: '24.05'}
          ]);
      } else {
          // Zur√ºck zur Hauptebene
          $('#current-folder-title').text('üìÅ Projekt Notizen');
          updateBreadcrumb("Projekt Notizen");
          loadMainFolder();
      }
  }

  function updateBreadcrumb(folderName) {
      const breadcrumb = $('#notes-breadcrumb');
      if (folderName === "Projekt Notizen") {
          breadcrumb.html(`
              <li class="breadcrumb-item active">
                  <i class="fas fa-home"></i> Projekt Notizen
              </li>
          `);
      } else {
          breadcrumb.html(`
              <li class="breadcrumb-item">
                  <a href="#" onclick="navigateToFolder(null)">
                      <i class="fas fa-home"></i> Projekt Notizen
                  </a>
              </li>
              <li class="breadcrumb-item active">${folderName}</li>
          `);
      }
  }

  function loadMainFolder() {
      const grid = $('#items-grid');
      grid.html(`
          <div class="col-md-3 col-sm-4 col-6">
              <div class="card h-100 folder-card" onclick="navigateToFolder(1)">
                  <div class="card-body text-center p-3">
                      <i class="fas fa-folder fa-2x text-warning mb-2"></i>
                      <h6 class="card-title small">Charaktere</h6>
                      <small class="text-muted">3 Notizen</small>
                  </div>
              </div>
          </div>
          <div class="col-md-3 col-sm-4 col-6">
              <div class="card h-100 folder-card" onclick="navigateToFolder(2)">
                  <div class="card-body text-center p-3">
                      <i class="fas fa-folder fa-2x text-warning mb-2"></i>
                      <h6 class="card-title small">Recherche</h6>
                      <small class="text-muted">1 Notiz</small>
                  </div>
              </div>
          </div>
          <div class="col-md-3 col-sm-4 col-6">
              <div class="card h-100 note-card" onclick="openNote(1)">
                  <div class="card-body text-center p-3">
                      <i class="fas fa-sticky-note fa-2x text-info mb-2"></i>
                      <h6 class="card-title small">Schnelle Ideen</h6>
                      <small class="text-muted">27.05.2025</small>
                  </div>
              </div>
          </div>
      `);
  }

  function loadFolderContent(items) {
      const grid = $('#items-grid');
      let html = '';
      
      items.forEach(item => {
          if (item.type === 'folder') {
              html += `
                  <div class="col-md-3 col-sm-4 col-6">
                      <div class="card h-100 folder-card" onclick="navigateToFolder(${item.id})">
                          <div class="card-body text-center p-3">
                              <i class="fas fa-folder fa-2x text-warning mb-2"></i>
                              <h6 class="card-title small">${item.title}</h6>
                              <small class="text-muted">${item.count} Notizen</small>
                          </div>
                      </div>
                  </div>
              `;
          } else {
              html += `
                  <div class="col-md-3 col-sm-4 col-6">
                      <div class="card h-100 note-card" onclick="openNote(${item.id})">
                          <div class="card-body text-center p-3">
                              <i class="fas fa-sticky-note fa-2x text-info mb-2"></i>
                              <h6 class="card-title small">${item.title}</h6>
                              <small class="text-muted">${item.date}</small>
                          </div>
                      </div>
                  </div>
              `;
          }
      });
      
      grid.html(html);
  }

  function openNote(noteId) {
      $('#notes-content').hide();
      $('#note-editor-section').show();
      $('#current-note-title').text('Charakterbeschreibung');
      $('#current-note-path').text('üìÅ Projekt Notizen > Charaktere');
      $('#note-title-input').val('Charakterbeschreibung');
      $('#note-content').val('# Hauptcharakter\n\nName: Max Mustermann\nAlter: 25 Jahre\nBeruf: Abenteurer\n\nBeschreibung:\nEin mutiger junger Mann mit einer Vorliebe f√ºr gef√§hrliche Abenteuer...');
  }

  function closeNoteEditor() {
      $('#note-editor-section').hide();
      $('#notes-content').show();
  }

  function saveCurrentNote() {
      const title = $('#note-title-input').val();
      const content = $('#note-content').val();
      
      // TODO: API-Call zum Speichern
      showTempMessage('Notiz "' + title + '" gespeichert!', 'success');
  }

  function deleteCurrentNote() {
      if (confirm('Notiz wirklich l√∂schen?')) {
          showTempMessage('Notiz gel√∂scht!', 'info');
          closeNoteEditor();
      }
  }

  function createNewNote() {
      $('#notes-content').hide();
      $('#note-editor-section').show();
      $('#current-note-title').text('Neue Notiz');
      $('#note-title-input').val('');
      $('#note-content').val('');
  }

  function createNewFolder() {
      const folderName = prompt('Ordner-Name:', 'Neuer Ordner');
      if (folderName) {
          showTempMessage('Ordner "' + folderName + '" erstellt!', 'success');
          // TODO: Ordner erstellen und Ansicht aktualisieren
      }
  }

  // Warnung vor ungespeicherten √Ñnderungen
  window.addEventListener('beforeunload', function(e) {
      if (hasUnsavedChanges) {
          e.preventDefault();
          e.returnValue = 'Du hast ungespeicherte √Ñnderungen. Wirklich verlassen?';
          return e.returnValue;
      }
  });
  </script>

{% endblock %}